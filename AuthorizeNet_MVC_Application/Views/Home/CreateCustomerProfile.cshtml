@model AuthorizeNet.Customer

@{
    ViewBag.Title = "CreateCustomerProfile";
}

<h2>CreateCustomerProfile</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Customer</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
    function successfulCustomerSave(data) {
        if (data.State.toLowerCase() == 'success') { //Checked for Message code based on which the iframeAuthorizeNet iframe will be visible

            var jsonAdditionalDetail = JSON.parse(data.Data)

            var token = jsonAdditionalDetail.Token;

            $("#authinput").attr("value", token);

            $("#iframeAuthorizeNet").attr("src", '/Home/Empty');
            AuthorizeNetPopup.openAddPaymentPopup();
            if (console != null) {
                console.log("Token from Authorize.net : " + token);
            }
        }
        else {
            alert(data.Data);
        }
    }



    function saveCustomerFailure(data, jqXHR, textStatus)
    { alert(textStatus); }
</script>
}
